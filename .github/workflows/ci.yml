# ci.yml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: tools/starfly/ci/lint.sh

  build_linux:
    name: "Build shiptest.dmb (Linux)"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/cache/byond
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-
    - run: tools/starfly/ci/install_byond_linux.sh
    - name: Build Project
      run: |
        source ${HOME}/BYOND/byond/bin/byondsetup
        tools/build/build --ci dm -DCIBUILDING -DCITESTING -DALL_MAPS -DFULL_INIT

  build_modules_off:
    name: "Build shiptest.dmb (Modules Disabled)"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/cache/byond
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-
    - run: tools/starfly/ci/install_byond_linux.sh
    - name: Build Project
      run: |
        sed -i -e 's.#define.// #define.g' code/__DEFINES/__starfly.dm
        sed -i -e 's.true.false.g' tgui/packages/tgui/starfly.ts
        source ${HOME}/BYOND/byond/bin/byondsetup
        tools/build/build --ci dm -DCIBUILDING -DCITESTING -DALL_MAPS -DFULL_INIT

  build_windows:
    name: "Build shiptest.dmb (Windows)"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          C:/byond.zip
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-
    - name: Build Project
      run: pwsh tools/starfly/ci/build_windows.ps1
      env:
        DM_EXE: "C:\\byond\\bin\\dm.exe"

  build_auxmos:
    name: "Build libauxmos.so"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/cache/auxmos
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-auxmos-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-auxmos-${{ hashFiles('**/dependencies.sh') }}
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-auxmos-
    - uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/cache/byond
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        fail-on-cache-miss: false
    - run: tools/starfly/ci/install_byond_linux.sh
    - run: tools/starfly/ci/build_auxmos.sh

  build_rustg:
    name: "Build librust_g.so"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/cache/rustg
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-rustg-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-rustg-${{ hashFiles('**/dependencies.sh') }}
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-rustg-
    - run: rustup update stable && rustup default stable
    - run: tools/starfly/ci/build_rust_g.sh

  build_docker:
    name: "Build Docker Image"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/build-push-action@v4
      with:
        context: .
        push: false

  run_integration_tests:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        test_name:
        - "BASIC_TESTS"
        - "CREATE_AND_DESTROY_TEST"
        - "PLANET_GEN_TEST"
        - "SHIP_PLACEMENT_TEST"
        - "STARFLY13_TEST"
        - "STARFLY13_RUIN_PLACEMENT_BEACHPLANET_TEST"
        - "STARFLY13_RUIN_PLACEMENT_EMPTY_SPACE_TEST"
        - "STARFLY13_RUIN_PLACEMENT_ICE_TEST"
        - "STARFLY13_RUIN_PLACEMENT_JUNGLE_TEST"
        - "STARFLY13_RUIN_PLACEMENT_LAVA_TEST"
        - "STARFLY13_RUIN_PLACEMENT_REEBE_TEST"
        - "STARFLY13_RUIN_PLACEMENT_ROCKPLANET_TEST"
        - "STARFLY13_RUIN_PLACEMENT_SAND_TEST"
        - "STARFLY13_RUIN_PLACEMENT_SPACE_TEST"
        - "STARFLY13_RUIN_PLACEMENT_WASTEPLANET_TEST"

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: oopy-pants
        ports:
          - 23306:3306

    steps:
    - name: "Checkout Project"
      uses: actions/checkout@v4

    - name: "Restore BYOND"
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/cache/byond
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-byond-${{ hashFiles('**/dependencies.sh') }}
        fail-on-cache-miss: true

    - name: "Restore libauxmos.so"
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/cache/auxmos
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-auxmos-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-auxmos-${{ hashFiles('**/dependencies.sh') }}
        fail-on-cache-miss: true

    - name: "Restore librust_g.so"
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/cache/rustg
        key: ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-rustg-${{ hashFiles('**/dependencies.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ secrets.CACHE_PURGE_KEY }}-rustg-${{ hashFiles('**/dependencies.sh') }}
        fail-on-cache-miss: true

    - name: "Install System Packages"
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update || true
        sudo apt install -o APT::Immediate-Configure=false libssl-dev:i386 libgcc-s1:i386

    - name: "Prepare BYOND"
      run: |
        tools/starfly/ci/install_byond_linux.sh
        cp -v ${{ github.workspace }}/cache/auxmos/libauxmos.so ~/BYOND/byond/bin/libauxmos.so
        cp -v ${{ github.workspace }}/cache/rustg/librust_g.so ~/BYOND/byond/bin/librust_g.so

    # - name: "Debug: Prepare BYOND"
    #   run:
    #     source ~/BYOND/byond/bin/byondsetup
    #     ls -l ~/BYOND/byond/bin && echo
    #     ldd ~/BYOND/byond/bin/DreamDaemon && echo
    #     ldd ~/BYOND/byond/bin/DreamMaker && echo
    #     ldd ~/BYOND/byond/bin/libbyond.so && echo
    #     ldd ~/BYOND/byond/bin/libext.so && echo
    #     ldd ~/BYOND/byond/bin/libauxmos.so && echo
    #     ldd ~/BYOND/byond/bin/librust_g.so && echo

    - name: "Setup MariaDB Database"
      run: |
        mysql --host 127.0.0.1 --port 23306 -u root -poopy-pants -e 'CREATE DATABASE tg_ci;'
        mysql --host 127.0.0.1 --port 23306 -u root -poopy-pants tg_ci < SQL/tgstation_schema.sql

    - name: "Compile Tests"
      run: |
        source ~/BYOND/byond/bin/byondsetup
        tools/build/build --ci dm -DCIBUILDING -DANSICOLORS -D${{ matrix.test_name }}

    - name: "Run Tests"
      run: |
        source ~/BYOND/byond/bin/byondsetup
        bash tools/ci/run_server.sh
